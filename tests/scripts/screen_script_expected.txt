Compiling 'screen_script.zs'
Pass 1: Parsing
Pass 2: Preprocessing
Pass 3: Registration
Pass 4: Analyzing Code
Pass 5: Generating object code
Pass 6: Assembling
Success!
Compile finished with exit code '0' (success)

PUSHR d0; void run(int, int) Params
PUSHR d1
PUSHV 0; void run(int, int) Body Start
PUSHR d2
SETR d4,SP
SETR d2,LINKHP
DIVV d2,2
PUSHR d2
POP d2
SETR LINKHP,d2
PUSHR d4; while(true) #9272 Body [Opt:AlwaysOn] Start
SETR d2,LINKX; UsrFunc[int ComboAt(int, int)] Params Start
ADDV d2,8
PUSHR d2
SETR d2,LINKY
ADDV d2,8
PUSHR d2; UsrFunc[int ComboAt(int, int)] Params End
CALLFUNC 0.0079; UsrFunc[int ComboAt(int, int)] Call
POP d4
STORED d2,0
LOADD d2,0; if() #9274 Test
PUSHR d2
POP d0
SETR d2,COMBODD
PUSHR d2
LOADD d2,3
POP d3
COMPARER d3,d2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 45; Test 'if'
LOADD d2,0; if() #9274 Body Start
PUSHR d2
POP d0
SETR d2,COMBODD
ADDV d2,1
PUSHR d2
LOADD d2,0
PUSHR d2
POP d0
POP d2
SETR COMBODD,d2
LOADD d2,2; InlineFunc[void Game->PlaySound(int)] Params
PLAYSOUNDR d2; InlineFunc[void Game->PlaySound(int)] Body AND if() #9274 Body End
PUSHV 6; InlineFunc[void Screen->DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
PUSHR LINKX
SETR d2,LINKY
SUBV d2,16
PUSHR d2
PUSHR LINKTILE
PUSHARGSV 1,0.0002
PUSHR LINKCSET
PUSHARGSV -1,0.0002
PUSHARGSV 0,0.0004
PUSHV 1
PUSHV 128; InlineFunc[void Screen->DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWTILE; InlineFunc[void Screen->DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS d5,0.0015; InlineFunc[void Screen->DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
WAITDRAW; InlineFunc[void Waitdraw()] Body
PUSHV 6; InlineFunc[void Screen->DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
PUSHR LINKX
SETR d2,LINKY
ADDV d2,16
PUSHR d2
PUSHR LINKTILE
PUSHARGSV 1,0.0002
PUSHR LINKCSET
PUSHARGSV -1,0.0002
PUSHARGSV 0,0.0003
PUSHV 2
PUSHV 1
PUSHV 128; InlineFunc[void Screen->DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWTILE; InlineFunc[void Screen->DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS d5,0.0015; InlineFunc[void Screen->DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
WAITFRAME; InlineFunc[void Waitframe()] Body AND while(true) #9272 Body [Opt:AlwaysOn] End
GOTO 11; while() #9272 End
POPARGS d5,0.0004
RETURNFUNC; void run(int, int) Body End
SETR d4,SP; Func[int ComboAt(int, int)] Body Start
PUSHR d4
LOADD d2,1; UsrFunc[int VBound(int, int, int)] Params Start
PUSHR d2
PUSHV 255
PUSHV 0; UsrFunc[int VBound(int, int, int)] Params End
CALLFUNC 0.0106; UsrFunc[int VBound(int, int, int)] Call
POP d4
STORED d2,1
PUSHR d4
LOADD d2,0; UsrFunc[int VBound(int, int, int)] Params Start
PUSHR d2
PUSHV 175
PUSHV 0; UsrFunc[int VBound(int, int, int)] Params End
CALLFUNC 0.0106; UsrFunc[int VBound(int, int, int)] Call
POP d4
STORED d2,0
LOADD d2,0; return Start
ANDV d2,240
PUSHR d2
LOADD d2,1
RSHIFTV d2,4
POP d3
ADDR d2,d3
GOTO 104; return End
POPARGS d5,0.0002
RETURNFUNC; Func[int ComboAt(int, int)] Body End
SETR d4,SP; Func[int VBound(int, int, int)] Body Start
LOADD d2,2; if() #7615 Test
PUSHR d2
LOADD d2,0
POP d3
COMPARER d3,d2
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 120; Test 'if'
LOADD d2,0; if() #7615 Body Start
STORED d2,2
GOTO 132; if() #7615 Body End
LOADD d2,2; if() #7617 Test AND if() #7615 Else Start
PUSHR d2
LOADD d2,1
POP d3
COMPARER d3,d2
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 132; Test 'if'
LOADD d2,1; if() #7617 Body Start
STORED d2,2; if() #7617 Body End
LOADD d2,2; if() #7615 Else End AND return Start
GOTO 134; return End
POPARGS d5,0.0003
RETURNFUNC; Func[int VBound(int, int, int)] Body End


ALLOCATEGMEMV d2,4096; void run() Body Start
SETR gd1,d2
QUIT; void run() Body End


Compiling 'scrolling_debug.zs'
Pass 1: Parsing
Pass 2: Preprocessing
Pass 3: Registration
Pass 4: Analyzing Code
Pass 5: Generating object code
Pass 6: Assembling
Success!
Compile finished with exit code '0' (success)

PUSHR REFDMAPDATA; void run() Body Start
PUSHARGSR d2,0.0006
SETR d4,SP
ALLOCATEMEMV d2,13; while(true) #9272 Body [Opt:AlwaysOn] Start
STORED d2,5
WRITEPODSTRING d2,"OX/OY %d %d\n"
LOADD d2,5; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETV d2,3
PUSHR d2
POP d0
PUSHVARGR GAMESCROLLING
SETV d2,4
PUSHR d2
POP d0
PUSHVARGR GAMESCROLLING; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOADD d3,5
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,6
STORED d2,4
WRITEPODSTRING d2,"OX/OY"
PUSHV 7; InlineFunc[void Screen->DrawString(int, int, int, int, int, int, int, int, int)] Params Start
PUSHARGSV 0,0.0002
PUSHV 2
PUSHV 1
PUSHV 15
PUSHV 0
LOADD d2,4
PUSHR d2
PUSHV 128; InlineFunc[void Screen->DrawString(int, int, int, int, int, int, int, int, int)] Params End
DRAWSTRING; InlineFunc[void Screen->DrawString(int, int, int, int, int, int, int, int, int)] Body Start
POPARGS d5,0.0009; InlineFunc[void Screen->DrawString(int, int, int, int, int, int, int, int, int)] Body End
LOADD d3,4
DEALLOCATEMEMR d3
PUSHV 7; InlineFunc[void Screen->DrawInteger(int, int, int, int, int, int, int, int, int, int, int)] Params Start
PUSHV 40
PUSHV 0
PUSHV 2
PUSHV 1
PUSHV 15
PUSHARGSV -1,0.0002
SETV d2,3
PUSHR d2
POP d0
PUSHR GAMESCROLLING
PUSHV 0
PUSHV 128; InlineFunc[void Screen->DrawInteger(int, int, int, int, int, int, int, int, int, int, int)] Params End
DRAWINT; InlineFunc[void Screen->DrawInteger(int, int, int, int, int, int, int, int, int, int, int)] Body Start
POPARGS d5,0.0011; InlineFunc[void Screen->DrawInteger(int, int, int, int, int, int, int, int, int, int, int)] Body End
PUSHV 7; InlineFunc[void Screen->DrawInteger(int, int, int, int, int, int, int, int, int, int, int)] Params Start
PUSHV 120
PUSHV 0
PUSHV 2
PUSHV 1
PUSHV 15
PUSHARGSV -1,0.0002
SETV d2,4
PUSHR d2
POP d0
PUSHR GAMESCROLLING
PUSHV 0
PUSHV 128; InlineFunc[void Screen->DrawInteger(int, int, int, int, int, int, int, int, int, int, int)] Params End
DRAWINT; InlineFunc[void Screen->DrawInteger(int, int, int, int, int, int, int, int, int, int, int)] Body Start
POPARGS d5,0.0011; InlineFunc[void Screen->DrawInteger(int, int, int, int, int, int, int, int, int, int, int)] Body End
ALLOCATEMEMV d2,13
STORED d2,3
WRITEPODSTRING d2,"NX/NY %d %d\n"
LOADD d2,3; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETV d2,1
PUSHR d2
POP d0
PUSHVARGR GAMESCROLLING
SETV d2,2
PUSHR d2
POP d0
PUSHVARGR GAMESCROLLING; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOADD d3,3
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,6
STORED d2,2
WRITEPODSTRING d2,"NX/NY"
PUSHV 7; InlineFunc[void Screen->DrawString(int, int, int, int, int, int, int, int, int)] Params Start
PUSHV 0
PUSHV 8
PUSHV 2
PUSHV 1
PUSHV 15
PUSHV 0
LOADD d2,2
PUSHR d2
PUSHV 128; InlineFunc[void Screen->DrawString(int, int, int, int, int, int, int, int, int)] Params End
DRAWSTRING; InlineFunc[void Screen->DrawString(int, int, int, int, int, int, int, int, int)] Body Start
POPARGS d5,0.0009; InlineFunc[void Screen->DrawString(int, int, int, int, int, int, int, int, int)] Body End
LOADD d3,2
DEALLOCATEMEMR d3
PUSHV 7; InlineFunc[void Screen->DrawInteger(int, int, int, int, int, int, int, int, int, int, int)] Params Start
PUSHV 40
PUSHV 8
PUSHV 2
PUSHV 1
PUSHV 15
PUSHARGSV -1,0.0002
SETV d2,1
PUSHR d2
POP d0
PUSHR GAMESCROLLING
PUSHV 0
PUSHV 128; InlineFunc[void Screen->DrawInteger(int, int, int, int, int, int, int, int, int, int, int)] Params End
DRAWINT; InlineFunc[void Screen->DrawInteger(int, int, int, int, int, int, int, int, int, int, int)] Body Start
POPARGS d5,0.0011; InlineFunc[void Screen->DrawInteger(int, int, int, int, int, int, int, int, int, int, int)] Body End
PUSHV 7; InlineFunc[void Screen->DrawInteger(int, int, int, int, int, int, int, int, int, int, int)] Params Start
PUSHV 120
PUSHV 8
PUSHV 2
PUSHV 1
PUSHV 15
PUSHARGSV -1,0.0002
SETV d2,2
PUSHR d2
POP d0
PUSHR GAMESCROLLING
PUSHV 0
PUSHV 128; InlineFunc[void Screen->DrawInteger(int, int, int, int, int, int, int, int, int, int, int)] Params End
DRAWINT; InlineFunc[void Screen->DrawInteger(int, int, int, int, int, int, int, int, int, int, int)] Body Start
POPARGS d5,0.0011; InlineFunc[void Screen->DrawInteger(int, int, int, int, int, int, int, int, int, int, int)] Body End
SETV d2,0; if() #9274 Test
PUSHR d2
POP d0
SETR d2,GAMESCROLLING
COMPAREV d2,-1
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 223; Test 'if'
SETR d2,LINKX; if() #9274 Body Start
PUSHR d2
SETV d2,1
PUSHR d2
POP d0
SETR d2,GAMESCROLLING
POP d3
ADDR d2,d3
STORED d2,1
SETR d2,LINKY
PUSHR d2
SETV d2,2
PUSHR d2
POP d0
SETR d2,GAMESCROLLING
POP d3
ADDR d2,d3
STORED d2,0
PUSHV 3; InlineFunc[void Screen->DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOADD d2,1
PUSHR d2
LOADD d2,0
PUSHR d2
PUSHV 20
PUSHARGSV 1,0.0002
PUSHV 3
PUSHARGSV -1,0.0002
PUSHARGSV 0,0.0005
PUSHV 1
PUSHV 128; InlineFunc[void Screen->DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWCOMBO; InlineFunc[void Screen->DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS d5,0.0016; InlineFunc[void Screen->DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
SETV d2,3
PUSHR d2
POP d0
SETR d2,GAMESCROLLING
ADDV d2,128
STORED d2,1
SETV d2,4
PUSHR d2
POP d0
SETR d2,GAMESCROLLING
ADDV d2,88
STORED d2,0
PUSHV 3; InlineFunc[void Screen->DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOADD d2,1
PUSHR d2
LOADD d2,0
PUSHR d2
PUSHV 21
PUSHARGSV 1,0.0002
PUSHV 3
PUSHARGSV -1,0.0002
PUSHARGSV 0,0.0005
PUSHV 1
PUSHV 128; InlineFunc[void Screen->DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWCOMBO; InlineFunc[void Screen->DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS d5,0.0016; InlineFunc[void Screen->DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
SETV d2,1
PUSHR d2
POP d0
SETR d2,GAMESCROLLING
ADDV d2,128
STORED d2,1
SETV d2,2
PUSHR d2
POP d0
SETR d2,GAMESCROLLING
ADDV d2,88
STORED d2,0
PUSHV 3; InlineFunc[void Screen->DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOADD d2,1
PUSHR d2
LOADD d2,0
PUSHR d2
PUSHV 44
PUSHARGSV 1,0.0002
PUSHV 3
PUSHARGSV -1,0.0002
PUSHARGSV 0,0.0005
PUSHV 1
PUSHV 128; InlineFunc[void Screen->DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWCOMBO; InlineFunc[void Screen->DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS d5,0.0016; InlineFunc[void Screen->DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End AND if() #9274 Body End
WAITFRAME; InlineFunc[void Waitframe()] Body AND while(true) #9272 Body [Opt:AlwaysOn] End
GOTO 4; while() #9272 End
POPARGS d5,0.0007
RETURNFUNC; void run() Body End


ALLOCATEGMEMV d2,4096; void run() Body Start
SETR gd1,d2
QUIT; void run() Body End

